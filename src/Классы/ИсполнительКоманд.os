#Использовать logos
#Использовать 1commands

Перем ВыводКоманды; // Вывод исполняемой команды
Перем КодВозврата; // Код возврата исполняемой команды
Перем ПутьКУтилитеМониторинга;  // Путь к исполняемому файлу haspmonitor

Перем Лог; // Лог

Процедура ПриСозданииОбъекта(Знач НовыйПутьКУтилитеМониторинга = "")

    Лог = Служебный.Лог();

    Если НЕ ЗначениеЗаполнено(НовыйПутьКУтилитеМониторинга) Тогда
        Параметры = Служебный.Параметры();
        НовыйПутьКУтилитеМониторинга = Параметры["hsmon-path"];  
    КонецЕсли;

    УстановитьПутьКУтилитеМониторинга(НовыйПутьКУтилитеМониторинга);

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// Работа со свойствами класса

// Возвращает путь к исполняемому файлу haspmonitor.
//
//  Возвращаемое значение:
//   Строка - Путь к исполняемому файлу.
//
Функция ПутьКУтилитеМониторинга() Экспорт
    Возврат ПутьКУтилитеМониторинга;
КонецФункции

// Возвращает текст результата выполнения команды.
//
//  Возвращаемое значение:
//   Строка - вывод команды.
//
Функция ВыводКоманды() Экспорт
    Возврат ВыводКоманды;
КонецФункции // ВыводКоманды()

// Функция возвращает код возврата выполнения команды
//   
// Возвращаемое значение:
//    Число - код возврата команды
//
Функция КодВозврата() Экспорт
    Возврат КодВозврата;
КонецФункции // КодВозврата()

// Установить путь к исполняемому файлу haspmonitor.
//
// Параметры:
//   Путь - Строка - Путь к исполняемому файлу.
//
Процедура УстановитьПутьКУтилитеМониторинга(Знач Путь) Экспорт
    ПутьКУтилитеМониторинга = Путь;
    ФайлУтилитыМониторинга = Новый Файл(ПутьКУтилитеМониторинга);
    Если Не ФайлУтилитыМониторинга.Существует() Тогда
        ВызватьИсключение "Нельзя установить несуществующий путь к утилите haspmonitor: " + ФайлУтилитыМониторинга.ПолноеИмя;
    КонецЕсли;
    Лог.Отладка("Путь к исполняемому файлу haspmonitor.exe: " + ФайлУтилитыМониторинга.ПолноеИмя);
КонецПроцедуры

// Выполняет команды через утилиту haspmonitor
//
// Параметры:
//   ПараметрыКоманды - Массив - массив параметров команды 
//
//  Возвращаемое значение:
//   Строка - результат выполнения команды через утилиту haspmonitor
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт

    Команда = Новый Команда();
    Команда.УстановитьКоманду(ПутьКУтилитеМониторинга);
    Команда.УстановитьКодировкуВывода(КодировкаТекста.UTF8);

    Команда.ДобавитьПараметры(ПараметрыКоманды);

    Команда.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);

    Лог.Отладка("Выполняю команду %1", Команда.ПолучитьКоманду());
    Для каждого Параметр Из Команда.ПолучитьПараметры() Цикл
        Лог.Отладка("Параметр команды %1", Параметр);
    КонецЦикла;

    КодВозврата = Команда.Исполнить();

    ВыводКоманды = Команда.ПолучитьВывод();

    Если КодВозврата = 0 Тогда
        Лог.Отладка("Код возврата равен %1: %2", КодВозврата, ВыводКоманды);
    Иначе
        Лог.Предупреждение("Получен ненулевой код возврата %1: %2", КодВозврата, ВыводКоманды);
    КонецЕсли;

    Возврат ВыводКоманды;

КонецФункции