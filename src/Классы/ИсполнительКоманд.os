#Использовать logos
#Использовать 1commands

Перем Лог;

Перем ПутьКМониторуАппаратныхКлючей;

//////////////////////////////////////////////////////////////////////////
// Работа со свойствами класса

// Получить путь к исполняемому файлу haspmonitor.
//
//  Возвращаемое значение:
//   Строка - Путь к исполняемому файлу.
//
Функция ПолучитьПутьКМониторуАппаратныхКлючей() Экспорт
    Возврат ПутьКМониторуАппаратныхКлючей;
КонецФункции

// Установить путь к исполняемому файлу haspmonitor.
//
// Параметры:
//   Путь - Строка - Путь к исполняемому файлу.
//
Процедура УстановитьПутьКМониторуАппаратныхКлючей(Знач Путь) Экспорт
    ПутьКМониторуАппаратныхКлючей = Путь;
КонецПроцедуры

// Выполняет команды через утилиту haspmonitor
//
// Параметры:
//   ПараметрыКоманды - Массив - массив параметров команды 
//
//  Возвращаемое значение:
//   Строка - результат выполнения команды через утилиту haspmonitor
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт

	КомандаВыполнения = ПутьКМониторуАппаратныхКлючей;
	
	Команда = Новый Команда();
	Команда.УстановитьКоманду(КомандаВыполнения);
	Команда.УстановитьКодировкуВывода(КодировкаТекста.UTF8);

	Команда.ДобавитьПараметры(ПараметрыКоманды);

	Команда.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);
	КодВозврата = Команда.Исполнить();

	Если КодВозврата <> 0 Тогда
		ВызватьИсключение Команда.ПолучитьВывод();
	КонецЕсли;

	Возврат Команда.ПолучитьВывод();

КонецФункции

Процедура ПриСозданииОбъекта()

	Лог = Логирование.ПолучитьЛог("oscript.lib.v8haspmonitor");
	Лог = Логирование.ПолучитьЛог("oscript.lib.commands");
	Лог.УстановитьУровень(УровниЛога.Отладка);

	ПутьКМониторуАппаратныхКлючей = ".\bin\HaspMonitor.exe";

КонецПроцедуры
